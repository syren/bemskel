.u-full-width {
  width: 100%; }

.u-max-full-width {
  max-width: 100%; }

.u-pull--right {
  float: right; }

.u-pull--left {
  float: left; }

.u-disabled {
  cursor: default;
  opacity: .5;
  pointer-events: none; }

/**
 * Clear inner floats
 */
.u-clearfix:after {
  clear: both;
  content: "";
  display: table; }

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.u-hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.u-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.u-ta-left {
  text-align: left; }

.u-ta-left {
  text-align: center; }

.u-ta-right {
  text-align: right; }

/*
Containers

Use containers when you need a content area that has standard maximum width and centered on the page.

Markup:
<div class="container {modifier_class}}">Container</div>

.l-container          - Default container size = $container-width
.l-container--sm      - Small Container
.container--lg      - Large Container
*/
.l-container {
  margin: 0 auto;
  max-width: 1000px;
  padding: 0 10px;
  position: relative;
  width: 100%;
  box-sizing: border-box; }

.l-container--lg {
  margin: 0 auto;
  max-width: 1200px;
  padding: 3.2rem 1rem; }

.l-container--sm {
  margin: 0 auto;
  max-width: 640px;
  padding: 2.4rem 2rem; }

.l-col {
  width: 100%;
  float: left;
  box-sizing: border-box; }

@media (min-width: 0px) {
  .l-container {
    width: 85%;
    padding: 0; } }

@media (min-width: 576px) {
  .l-container {
    width: 80%; }
  .l-col {
    margin-left: 2%; }
  .l-col:first-child {
    margin-left: 0; }
  .l-col--1 {
    width: 6.5%; }
  .l-col--2 {
    width: 15%; }
  .l-col--3 {
    width: 23.5%; }
  .l-col--4 {
    width: 32%; }
  .l-col--5 {
    width: 40.5%; }
  .l-col--6 {
    width: 49%; }
  .l-col--7 {
    width: 57.5%; }
  .l-col--8 {
    width: 66%; }
  .l-col--9 {
    width: 74.5%; }
  .l-col--10 {
    width: 83%; }
  .l-col--11 {
    width: 91.5%; }
  .l-col--12 {
    width: 100%;
    margin-left: 0; }
  .l-col--1-3 {
    width: 32%; }
  .l-col--2-3 {
    width: 66%; }
  .l-col--1-2 {
    width: 49%; }
  .l-col--offset-1 {
    margin-left: 8.5% !important; }
  .l-col--offset-2 {
    margin-left: 17% !important; }
  .l-col--offset-3 {
    margin-left: 25.5% !important; }
  .l-col--offset-4 {
    margin-left: 34% !important; }
  .l-col--offset-5 {
    margin-left: 42.5% !important; }
  .l-col--offset-6 {
    margin-left: 51% !important; }
  .l-col--offset-7 {
    margin-left: 59.5% !important; }
  .l-col--offset-8 {
    margin-left: 68% !important; }
  .l-col--offset-9 {
    margin-left: 76.5% !important; }
  .l-col--offset-10 {
    margin-left: 85% !important; }
  .l-col--offset-11 {
    margin-left: 93.5% !important; }
  .l-col--offset-1-3 {
    margin-left: 34% !important; }
  .l-col--offset-2-3 {
    margin-left: 68% !important; }
  .l-col--offset-1-2 {
    margin-left: 51% !important; } }

/* Self Clearing Goodness */
.l-container:after,
.l-row:after {
  clear: both;
  content: "";
  display: table; }

/*

Grid

This is a grid made using flexbox. Use the ff classes to setup a flexbox grid:

.l-flex-grid               - Grid is always shown, even in small screens

// Modifier classes for `.l-flex-grid`.
// Use these classes to set the screen width when the grid is visible.

// Grid Modifiers
.l-flex-grid--md           - Grid starts at medium sized screens
.l-flex-grid--lg           - Grid starts at large and up screens


Use `.l-flex-grid__col` to define a column inside a `.l-flex-grid` grid.
Direct children of `.l-flex-grid` are columns with the class,
`.l-flex-grid__col`

Markup:
<div class="demo-grid">
  <div class="flex-grid">
    <div class="flex-grid__col">Cell 1</div>
    <div class="flex-grid__col">Cell 2</div>
    <div class="flex-grid__col">Cell 3</div>
  </div>
  <div class="flex-grid flex-grid--md">
    <div class="flex-grid__col flex-grid__col--sm">Half-width column</div>
    <div class="flex-grid__col">Default width column</div>

  </div>
  <div class="flex-grid flex-grid--md">
    <div class="flex-grid__col flex-grid__col--fixed-width">Cell 1</div>
    <div class="flex-grid__col">Cell 2</div>
  </div>
  <div class="flex-grid flex-grid--lg">
    <div class="flex-grid__col flex-grid__col--lg">Double-width column</div>
    <div class="flex-grid__col">Default width column</div>
  </div>
</div>

// Column modifiers

.l-flex-grid__col--sm           - half the width of default column
.l-flex-grid__col--lg           - double the width of default column
.l-flex-grid__col--fixed-width  - fixed-width column (default = 200px)
*/
.l-flex-grid {
  display: flex; }

.l-flex-grid > * {
  flex: 1; }

.l-flex-grid > *.l-flex-grid__col {
  flex-grow: 4;
  margin-left: 2%; }

.l-flex-grid > *.l-flex-grid__col--fixed-width {
  flex: 0 0 200px; }

.l-flex-grid > *.l-flex-grid__col--sm {
  flex-grow: 2; }

.l-flex-grid > *.l-flex-grid__col--lg {
  flex-grow: 8; }

.l-flex-grid > *:first-child {
  margin-left: 0rem; }

.l-flex-grid > *:last-child {
  margin-right: 0rem; }

@media (max-width: 549px) {
  .l-flex-grid--md {
    display: block; }
  .l-flex-grid--md > * {
    padding-left: 0;
    padding-right: 0; }
  .l-flex-grid--md > *.l-flex-grid__col {
    margin-left: 0; } }

@media (max-width: 959px) {
  .l-flex-grid--lg {
    display: block; }
  .l-flex-grid--lg > * {
    padding-left: 0;
    padding-right: 0; }
  .l-flex-grid--lg > *.l-flex-grid__col {
    margin-left: 0; } }
